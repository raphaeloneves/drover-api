openapi: 3.0.1
info:
  title: Drover Challenge
  description: Drover Challenge - Backend Engineer
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: raphaeloneves@outlook.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  - url: 'http://localhost:3000/api/v1'
tags:
  - name: cars
    description: Car resource
paths:
  /cars:
    get:
      tags:
        - cars
      summary: List all available cars
      description: >-
        List all cars with availability date less than three months. Sort,
        filter, and pagination available.
      operationId: index
      parameters:
        - name: sort
          in: query
          description: 'Sort the response by price, availability, year, color'
          schema:
            type: string
            default: price
            enum:
              - price
              - availability
              - year
              - color
        - name: sort_dir
          in: query
          description: 'Define the sorting direction to be used with the sort parameter'
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: color
          in: query
          description: 'Filter the cars by color name (case insensitive)'
          schema:
            type: string
        - name: maker
          in: query
          description: 'Filter the cars by maker name (case insensitive)'
          schema:
            type: string
        - name: page
          in: query
          description: 'Page number for navigation'
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: 'Limit the number of elements to be displayed in a page'
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                properties:
                  cars:
                    type: array
                    items:
                      $ref: '#/components/schemas/Car'
    post:
      tags:
        - cars
      summary: 'Create a new car'
      description: 'Create a new car'
      operationId: create
      requestBody:
        description: 'Object containing the information to create a new cars'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarRequest'
        required: true
      responses:
        '201':
          description: 'Created sucessful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: 'Validation error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  '/cars/{carId}':
    put:
      tags:
        - cars
      summary: 'Update an existing cars'
      description: 'Update an existing cars attributes'
      operationId: 'update'
      parameters:
        - name: 'carId'
          in: path
          description: 'ID of cars to return'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Object containing all the cars attributes to be updated'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarRequest'
        required: true
      responses:
        '204':
          description: 'Sucessfull operation - No content'
          content: {}
        '404':
          description: 'Car not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: 'Validation exception'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
components:
  schemas:
    CarRequest:
      required:
        - 'available_at'
        - 'model_id'
        - 'price'
        - 'subscription_price_attributes'
        - 'year'
      type: object
      properties:
        year:
          minimum: 2010
          type: integer
          format: int64
        price:
          minimum: 0
          type: number
          description: 'Monthly subscription price'
          format: float
        available_at:
          type: string
          format: date
        model_id:
          type: integer
          description: 'Model id to be associated with the cars'
          format: int64
        color:
          type: string
          example: 'white'
        subscription_price_attributes:
          $ref: '#/components/schemas/SubscriptionPrice'
    Car:
      type: object
      properties:
        id:
          type: integer
          format: int64
        year:
          minimum: 2010
          type: integer
          format: int64
        subscription_price:
          $ref: '#/components/schemas/SubscriptionPrice'
        available_at:
          type: string
          format: date
        model:
          $ref: '#/components/schemas/Model'
        color:
          type: string
          example: 'white'
    Model:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        maker_name:
          type: string
    SubscriptionPrice:
      required:
        - 'price'
      type: object
      properties:
        id:
          type: integer
          format: int64
        price:
          type: number
          format: float
      description: Monthly subscription price
    PaginatedResponse:
      type: object
      properties:
        meta:
          type: object
          properties:
            current_page:
              type: integer
              description: "Current page"
            total_pages:
              type: integer
              description: "Number of total pages available for navigation"
            items_display:
              type: integer
              description: "Number of items being displayed"
            items_per_page:
              type: integer
              description: "Number of items to be displayed per page"
    Error:
      type: object
      properties:
        error:
          type: string
          description: "Error message"
